name: Build Packer

on:
  pull_request:
    types:
      - closed

jobs:
  if_merged:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      # Runs a single command using the runners shell
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.4
        with:
          maven-version: 3.8.2
      # Runs a set of commands using the runners shell
      - name: Build with Maven
        run: mvn clean install
      
      - name: Packer build
        uses: hashicorp/packer-github-actions@master
        with:
          templateFile: 'ami.pkr.hcl'
          command: build      
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_PACKER }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_PACKER }}

      - name: Configure AWS DEMO credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEMO }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEMO }}
          aws-region: us-east-1
      - name: Launch Template
        run: |
          account_id=$(aws sts get-caller-identity --query "Account" --output text)
          latest_ami=$(aws ec2 describe-images --filters "Name=owner-id,Values=266883092057" --query "sort_by(Images, &CreationDate)[-1].[ImageId]" --output text)
          latest_LaunchTemplate_id=$(aws ec2 describe-launch-templates --query "sort_by(LaunchTemplates, &CreateTime)[-1].[LaunchTemplateId]" --output text)
          echo $account_id
          echo $latest_ami
          if [[ ${latest_LaunchTemplate_id} != 'None' ]]; then
            echo $latest_LaunchTemplate_id
            latestAutoScalingGroupName=$(aws autoscaling describe-auto-scaling-groups --query "sort_by(AutoScalingGroups, &CreatedTime)[-1].[AutoScalingGroupName]" --output text)
            echo $latestAutoScalingGroupName
            latestVersion=$(aws ec2 describe-launch-templates --launch-template-id $latest_LaunchTemplate_id --query "sort_by(LaunchTemplates, &CreateTime)[-1].[LatestVersionNumber]" --output text)
            echo $latestVersion
            aws ec2 create-launch-template-version --launch-template-id $latest_LaunchTemplate_id --version-description latest --source-version $latestVersion --launch-template-data "ImageId=$latest_ami"
            aws autoscaling start-instance-refresh --auto-scaling-group-name $latestAutoScalingGroupName
          fi